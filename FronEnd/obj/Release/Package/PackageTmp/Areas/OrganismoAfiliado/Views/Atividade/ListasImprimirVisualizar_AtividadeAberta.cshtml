@model SAL.MVC.Models.RelatorioModel<SAL.MVC.Areas.OrganismoAfiliado.Models.ListaPresencaAtividadeAbertaModel>
@{
    int contador = 1;
}
<style>
    .page {
        padding-top: 33px;
    }

    .pageother {
        padding-top: -30px;
    }

    .titulo {
        font-size: 9pt;
        font-weight: bold;
    }

    .coordenador {
        font-size: 11pt;
        font-weight: bold;
    }

    .texto {
        font-size: 9pt;
    }

    .textop {
        font-size: 9pt;
    }

    .textopequeno {
        font-size: 8pt;
    }
    .texto-branco {
        font-size: 9pt;
        color: white;
    }

    .texto-left {
        text-align: left;
    }

    .texto-right {
        text-align: right;
    }

    .texto-center {
        text-align: center;
    }

    h1 {
        font-size: 12pt;
        text-align: center;
        font-weight: bold;
        padding: 0;
        margin: 0;
    }

    h2 {
        font-size: 12pt;
        text-align: center;
        font-weight: bold;
        padding: 0;
        margin: 0;
    }

    .valores {
        width: 100px;
        font-size: 9pt;
        border-bottom-color: #000000;
        border-bottom-width: 1px;
        border-bottom-style: solid;
    }

    .espaco1 {
        width: 100px;
        font-size: 5pt;
    }

    .ordem {
        width: 50px;
    }

    .chave {
        width: 100px;
    }

    .nome {
        width: 300px;
    }

    .fundo {
        background-color: #e7e6e6;
    }
</style>
@for (int iPaginas = 0; iPaginas < Model.Dados.QuantidadePaginas; iPaginas++)
{
<div class="@(iPaginas == 0 ? "page" : "pageother")">
    @if (iPaginas == 0)
    {
        <h1>@Model.ReportTitle</h1>
        <h2>@Model.Dados.TipoAtividade@((string.IsNullOrEmpty(Model.Dados.NomeAtividade) == false && Model.Dados.NomeAtividade != Model.Dados.TipoAtividade ? ": " + Model.Dados.NomeAtividade : ""))</h2>
        <table class="tabela" cellpadding="4" cellspacing="0" width="100%">
            <tr>
                @if (string.IsNullOrEmpty(Model.Dados.NomeCoordenador) == false) { 
                    <td class="coordenador">Coordenador: @Model.Dados.NomeCoordenador</td>
                }
                <td class="texto-@(string.IsNullOrEmpty(Model.Dados.NomeCoordenador) == false ? "right" : "center") titulo"><span>Data: @SAL.MVC.Helpers.Constantes.DataPorExtenso(Model.Dados.Data)</span></td>
            </tr>
            <tr>
                <td colspan="@((string.IsNullOrEmpty(Model.Dados.NomeCoordenador) == false ? "2" : "1"))" class="espaco1">&nbsp;</td>
            </tr>
        </table>
    }
    @if (Model.Dados.Membros != null && Model.Dados.Membros.Any())
    {
        <table class="tabela" cellpadding="8" cellspacing="0" width="100%" border="1">
            <tr>
                <td class="titulo texto-center fundo ordem">Ordem</td>
                <td class="titulo texto-center fundo chave">Chave</td>
                <td class="titulo texto-center fundo nome">Nome</td>
                <td class="titulo texto-center fundo">Documento</td>
                <td class="titulo texto-center fundo">Contato</td>
            </tr>
            @{
                int contadorFinal = contador + (iPaginas == 0 ? 29 : 33);
            }
            @foreach (var MembrosItem in Model.Dados.Membros)
            {
        <tr>
            <td class="textopequeno texto-center">@contador.ToString("00")</td>
            <td class="textopequeno texto-center">@(string.IsNullOrEmpty(MembrosItem.NumeroChave) == false ? Convert.ToUInt64(MembrosItem.NumeroChave).ToString(@"000\.000") : "-")</td>
            <td class="textopequeno texto-left">@MembrosItem.Nome.ToUpper()</td>
            <td class="textopequeno texto-center">@(string.IsNullOrEmpty(MembrosItem.Documento) == false ? MembrosItem.Documento : "-")</td>
            <td class="textopequeno texto-left">@(string.IsNullOrEmpty(MembrosItem.Documento) == false ? MembrosItem.Telefone + Html.Raw(string.IsNullOrEmpty(MembrosItem.Telefone) == false && string.IsNullOrEmpty(MembrosItem.Email) ? "<br>" : "") + (string.IsNullOrEmpty(MembrosItem.Email) ? MembrosItem.Email : "") : "")</td>
        </tr>
                {
                    contador++;
                }
            }
        </table>
    }
    else
    {
        <table class="tabela" cellpadding="8" cellspacing="0" width="100%" border="1">
            <tr>
                <td class="titulo texto-center fundo ordem">Ordem</td>
                <td class="titulo texto-center fundo chave">Chave</td>
                <td class="titulo texto-center fundo nome">Nome</td>
                <td class="titulo texto-center fundo">E-mail</td>
            </tr>
            @{
                int contadorFinal = contador + (iPaginas == 0 ? 29 : 33);
            }
            @for (int i = contador; i <= contadorFinal; i++)
            {
                <tr>
                    <td class="texto texto-center">@contador.ToString("00")</td>
                    <td class="titulo texto-center">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
                    <td class="titulo texto-center">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
                    <td class="titulo texto-center">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
                </tr>
                {
                    contador++;
                }
            }
        </table>
    }
</div>
    if (Model.Dados.QuantidadePaginas > 1 && (iPaginas + 1) < Model.Dados.QuantidadePaginas)
    {
        <div style="page-break-before:always">&nbsp;</div>
    }
}
