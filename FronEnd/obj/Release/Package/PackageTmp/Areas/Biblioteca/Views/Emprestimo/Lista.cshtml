@model List<SAL.MVC.Areas.Biblioteca.Models.ItemModel>
@{
    ViewBag.Title = "Index";
    Layout = null;
}
<table id="datatable_tabletools" class="table table-striped table-bordered table-hover" width="100%" style="display:none;">
    <thead>
        <tr>
            <th>Tombo</th>
            <th>PHA</th>
            <th class="hidden-xs hidden-md">Tipo</th>
            <th>Título</th>
            @if (ViewBag.MostrarMembro != null && ViewBag.MostrarMembro)
            {
                <th class="text-center">Membro</th>
            }
            <th class="text-center hidden-xs hidden-md">Autor</th>
            <th class="text-center hidden-xs hidden-md">Assunto</th>
            <th class="text-center hidden-xs hidden-md">Local</th>
            @if (ViewBag.MostrarMembro != null && ViewBag.MostrarMembro)
            {
            <th class="text-center">Data Devolução</th>
            }
            <th class="text-center hidden-xs hidden-md">Físico</th>
            <th class="text-center hidden-xs hidden-md">Online</th>
            @if (ViewBag.MostrarDias != null && ViewBag.MostrarDias)
            {
                <th class="text-center">Dias</th>
            }
            <th>&nbsp;</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr id="line_@item.IdBiblioteca">
                <td align="center">@item.Codigo</td>
                <td align="center">@item.CodigoFA</td>
                <td class="text-center hidden-xs hidden-md">@item.TipoNome</td>
                <td>@item.Nome</td>
                @if (ViewBag.MostrarMembro != null && ViewBag.MostrarMembro)
                {
                    <td class="text-center">@item.MembroNome</td>
                }
                <td class="text-center hidden-xs hidden-md">@item.AutorNome</td>
                <td class="text-center hidden-xs hidden-md">@item.CategoriaNome</td>
                <td class="text-center hidden-xs hidden-md">@item.LocalNome</td>
                @if (ViewBag.MostrarMembro != null && ViewBag.MostrarMembro)
                {
                <td class="text-center">@item.DataDevolucao.ToString("dd/MM/yyyy")</td>
                }
                <td class="text-center hidden-xs hidden-md">@(item.DisponivelFisico ? "Sim" : "Não")</td>
                <td class="text-center hidden-xs hidden-md">@(item.DisponivelOnline ? "Sim" : "Não")</td>
                @if (ViewBag.MostrarDias != null && ViewBag.MostrarDias)
                {
                    <td class="text-center">@item.QuantidadeDiasAtraso.Value</td>
                }
                <td class="text-center" data-hide="print">
                    @if (item.DisponivelEmprestimo)
                    {
                        if (item.DisponivelFisico)
                        {
                            <a href="javascript:void(0);" onclick="Recibo(@item.IdBiblioteca);" class="btn btn-default" id="btnRecibo_@item.IdBiblioteca" style="display:@(item.Emprestimo ? "block" : "none");"><i class="fa fa-file-text-o"></i> Recibo</a>
                            <a href="javascript:void(0);" onclick="Editar(@item.IdBiblioteca);" class="btn btn-default" id="btnDevolver_@item.IdBiblioteca" style="display:@(item.Emprestimo ? "block" : "none");"><i class="fa fa-upload"></i> Devolver</a>
                            <a href="javascript:void(0);" onclick="Editar(@item.IdBiblioteca);" class="btn btn-default" id="btnEmprestar_@item.IdBiblioteca" style="display:@(item.Emprestimo ? "none" : "block");"><i class="fa fa-download"></i> Emprestar</a>
                        }
                        else
                        {
                            <span class="label label-warning">não disponível</span>
                        }
                    }
                    else
                    {
                        <span class="label label-warning">apenas consulta</span>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<script>
    $('#datatable_tabletools').dataTable({
        "preDrawCallback": function () {
            // Initialize the responsive datatables helper once.
            if (!responsiveHelper_datatable_tabletools) {
                responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
            }
        },
        "rowCallback": function (nRow) {
            try {
                responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
            } catch (e) {

            }   
        },
        "drawCallback": function (oSettings) {
            $("#datatable_tabletools").show();
            responsiveHelper_datatable_tabletools.respond();
        }
    });
</script>