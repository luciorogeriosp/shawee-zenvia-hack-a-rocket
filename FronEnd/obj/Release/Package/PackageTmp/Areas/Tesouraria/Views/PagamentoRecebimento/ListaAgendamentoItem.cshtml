@model List<SAL.MVC.Areas.Tesouraria.Models.AgendamentoItemModel>
@{
    Layout = null;
    DateTime dtAtual = SAL.Repository.Negocio.UtilNegocio.ObterDataHoraAtual();

    Tropical.Infrastructure.Model.User user = null;
    if (Tropical.Infrastructure.Util.SessionData.SessionReader("UsuarioLogado") != null)
    {
        user = (Tropical.Infrastructure.Model.User)Tropical.Infrastructure.Util.SessionData.SessionReader("UsuarioLogado");
    }

    SAL.MVC.Models.UsuarioClientePerfilModel perfilSelecionado = null;

    if (Tropical.Infrastructure.Util.SessionData.SessionReader("PerfilSelecionadoLogado") != null)
    {
        perfilSelecionado = (SAL.MVC.Models.UsuarioClientePerfilModel)Tropical.Infrastructure.Util.SessionData.SessionReader("PerfilSelecionadoLogado");
    }
}
@if (Model != null && Model.Any())
{
    <table id="datatable_tabletools" class="table table-striped table-bordered table-hover" width="100%" style="display:none;">
        <thead>
            <tr>
                <th data-hide="phone" class="text-center" width="6%">Código</th>
                <th data-class="expand" class="text-center" width="35%">Conta</th>
                <th data-hide="phone" class="text-center" width="35%">Detalhamento</th>
                <th data-hide="phone" class="text-center" width="6%">Déb. Aut.</th>
                <th data-hide="phone" class="text-center" width="12%">Venc.</th>
                <th class="text-center" width="6%">Valor</th>
                <th class="text-center">&nbsp;</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td class="text-center">@item.CodCont</td>
                    <td class="text-left">@item.ContaNome.ToUpper()</td>
                    <td class="text-left">@item.Observacao.ToUpper()</td>
                    <td class="text-center">@(item.DebitoAutomatico ? "Sim" : "Não")</td>
                    <td class="text-center">@item.DataVencimento.ToString("dd/MM/yyyy")</td>
                    <td class="text-right">@item.Valor</td>
                    <td class="text-center">
                        @if (item.Situacao == SAL.Repository.Comum.Constantes.SituacaoContasItemPago)
                        {
                            if (item.Remessa)
                            {
                                <a href="javascript:void(0);" onclick="AgendamentoEmitirReciboRemessa(@(item.Id));" class="btn btn-success" style="width:170px;"><i class="fa fa-file-text-o"></i> Emitir Recibo</a>
                            }
                            else
                            {
                                <a href="javascript:void(0);" onclick="AgendamentoEmitirRecibo(@(item.MovimentoId));" class="btn btn-success" style="width:170px;"><i class="fa fa-file-text-o"></i> Emitir Recibo</a>
                            }
                        }
                        else
                        {
                            if (item.Situacao == SAL.Repository.Comum.Constantes.SituacaoContasItemEmAberto)
                            {
                                if (perfilSelecionado.SomenteLeitura == false)
                                {
                                    <a href="javascript:void(0);" onclick="AgendamentoEditar(@(item.Id), @item.Remessa.ToString().ToLower());" class="btn @(dtAtual > item.DataVencimento ? "btn-warning" : "btn-success") text" style="width:170px;"><i class="fa fa-thumbs-o-up"></i> Efetivar</a>
                                    <a href="javascript:void(0);" onclick="AgendamentoCancelar(@(item.Id));" class="btn btn-danger text" style="width:170px;" id="btnAgendamentoCancelar_@(item.Id)"><i class="fa fa-trash-o"></i> Cancelar</a>
                                }
                            }
                            else
                            {
                                if (item.CancelamentoData.HasValue)
                                {
                                    <span class="badge bg-color-blueLight" rel="popover-hover" data-placement="left" data-content="Cancelado em: @item.CancelamentoData.Value.ToString("dd/MM/yyyy HH:mm") por: @item.CancelamentoUsuarioNome - Motivo: @item.CancelamentoMotivo">cancelado</span>
                                }
                            }
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <script>
        $(document).ready(function () {
            $('#datatable_tabletools').dataTable({
                "order": [[1, "asc"]],
                "ordering": false,
                "preDrawCallback": function () {
                    // Initialize the responsive datatables helper once.
                    if (!responsiveHelper_datatable_tabletools) {
                        responsiveHelper_datatable_tabletools = new ResponsiveDatatablesHelper($('#datatable_tabletools'), breakpointDefinition);
                    }
                },
                "rowCallback": function (nRow) {
                    try {
                        responsiveHelper_datatable_tabletools.createExpandIcon(nRow);
                    } catch (e) {

                    }   
                },
                "drawCallback": function (oSettings) {
                    $("#datatable_tabletools").show();
                    responsiveHelper_datatable_tabletools.respond();

                    if ("desktop" === thisDevice) {
                        $("[rel=tooltip]").tooltip();
                    }
                }
            });
        });
    </script>
}
else
{
    <text>Não existem contas à receber ou pagar em aberto.</text>
}